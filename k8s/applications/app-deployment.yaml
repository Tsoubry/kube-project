apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  generation: 2
  labels:
    app: hello-world-app
  name: hello-world-app
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: hello-world-app
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
      labels:
        app: hello-world-app
    spec:
      containers:
      - env:
        - name: NAME
          valueFrom:
            secretKeyRef:
              key: NAME
              name: hello-world-secret
        image: registry.digitalocean.com/z9pxj2-python-example/hello-world-app:v0.1.0
        imagePullPolicy: IfNotPresent
        name: hello-world-app
        resources:
          limits:
            cpu: 100m
            memory: 150Mi
          requests:
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 3
  conditions:
  - message: ReplicaSet "hello-world-app-7df7df6cd" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 2
  readyReplicas: 3
  replicas: 3
  updatedReplicas: 3
---
apiVersion: v1
kind: Service
metadata:
  name: hello-world-app
spec:
  type: ClusterIP
  ports:
  - port: 80
  selector:
    app: hello-world-app
